// Game constants
export const SNAKES = {
  16: 6, 47: 26, 49: 11, 56: 53, 62: 19, 
  64: 60, 87: 24, 93: 73, 95: 75, 98: 78
};

export const LADDERS = {
  1: 38, 4: 14, 9: 31, 21: 42, 28: 84,
  36: 44, 51: 67, 71: 91, 80: 100
};

export const PLAYERS = [
  { id: 1, name: 'Player 1', color: '#FF6B6B' },
  { id: 2, name: 'Player 2', color: '#4ECDC4' }
];

// Game state management functions
export const initializePlayers = () => {
  return PLAYERS.reduce((acc, player) => ({ ...acc, [player.id]: 0 }), {});
};

export const movePlayer = (currentPosition, diceValue) => {
  const newPosition = currentPosition + diceValue;
  return newPosition <= 100 ? newPosition : currentPosition;
};

export const checkSnakeOrLadder = (position) => {
  if (SNAKES[position]) {
    return { type: 'snake', newPosition: SNAKES[position] };
  } else if (LADDERS[position]) {
    return { type: 'ladder', newPosition: LADDERS[position] };
  }
  return null;
};

export const checkWinCondition = (position) => {
  return position === 100;
};

export const switchPlayer = (currentIndex) => {
  return (currentIndex + 1) % PLAYERS.length;
};

export const getGameStateMessage = (player, action, newPosition) => {
  switch (action) {
    case 'move':
      return `${player.name} moved to ${newPosition}`;
    case 'snake':
      return `${player.name} got bitten by a snake! Slid to ${newPosition}`;
    case 'ladder':
      return `${player.name} climbed a ladder! Moved to ${newPosition}`;
    case 'win':
      return `ðŸŽ‰ ${player.name} wins the game! ðŸŽ‰`;
    case 'invalid':
      return `${player.name} needs exact roll to win. Try again!`;
    default:
      return `${player.name}'s turn`;
  }
};